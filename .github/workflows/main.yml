name: CI - Build & Push DB Images Infisical

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  BUILD_NUMBER: ${{ github.run_number }}
  AWS_REGION: ca-central-1
  SECRET_NAME: infisical-secret

jobs:
  build-and-push-db:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install jq (for parsing secrets)
        run: sudo apt-get install -y jq

      - name: Download and convert AWS secret to .env file
        run: |
          aws secretsmanager get-secret-value \
            --secret-id $SECRET_NAME \
            --query SecretString \
            --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > .env

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build images via Docker Compose
        run: docker compose -f docker-compose.prod.yml build

      - name: Tag and push Infisical image
        run: |
          docker tag pocdeveloper/infisical:latest ${{ env.DOCKER_USERNAME }}/infisical:${{ env.BUILD_NUMBER }}
          docker push ${{ env.DOCKER_USERNAME }}/infisical:latest
          docker push ${{ env.DOCKER_USERNAME }}/infisical:${{ env.BUILD_NUMBER }}

      - name: Tag and push Postgres image
        run: |
          docker tag pocdeveloper/postgres:latest ${{ env.DOCKER_USERNAME }}/postgres:${{ env.BUILD_NUMBER }}
          docker push ${{ env.DOCKER_USERNAME }}/postgres:latest
          docker push ${{ env.DOCKER_USERNAME }}/postgres:${{ env.BUILD_NUMBER }}

      - name: Tag and push Redis image
        run: |
          docker tag pocdeveloper/redis-image:latest ${{ env.DOCKER_USERNAME }}/redis-image:${{ env.BUILD_NUMBER }}
          docker push ${{ env.DOCKER_USERNAME }}/redis-image:latest
          docker push ${{ env.DOCKER_USERNAME }}/redis-image:${{ env.BUILD_NUMBER }}
