name: CI/CD - Build, Push & Deploy Infisical

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  BUILD_NUMBER: ${{ github.run_number }}
  EC2_IP: 15.156.219.253 # Replace with your EC2 instance public IP
  SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

jobs:
  build-and-push-db:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Pull original images
        run: docker compose -f docker-compose.prod.yml pull

      - name: Tag and push Backend image
        run: |
          docker tag infisical/infisical:latest-postgres ${{ env.DOCKER_USERNAME }}/infisical:latest
          docker tag infisical/infisical:latest-postgres ${{ env.DOCKER_USERNAME }}/infisical:${{ env.BUILD_NUMBER }}
          docker push ${{ env.DOCKER_USERNAME }}/infisical:latest
          docker push ${{ env.DOCKER_USERNAME }}/infisical:${{ env.BUILD_NUMBER }}

      - name: Tag and push Postgres image
        run: |
          docker tag postgres:14-alpine ${{ env.DOCKER_USERNAME }}/postgres:latest
          docker tag postgres:14-alpine ${{ env.DOCKER_USERNAME }}/postgres:${{ env.BUILD_NUMBER }}
          docker push ${{ env.DOCKER_USERNAME }}/postgres:latest
          docker push ${{ env.DOCKER_USERNAME }}/postgres:${{ env.BUILD_NUMBER }}

      - name: Tag and push Redis image
        run: |
          docker tag redis ${{ env.DOCKER_USERNAME }}/redis-image:latest
          docker tag redis ${{ env.DOCKER_USERNAME }}/redis-image:${{ env.BUILD_NUMBER }}
          docker push ${{ env.DOCKER_USERNAME }}/redis-image:latest
          docker push ${{ env.DOCKER_USERNAME }}/redis-image:${{ env.BUILD_NUMBER }}

  deploy:
    name: CD - Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build-and-push-db
    steps:
      - name: Install SSH Key for AWS EC2
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2 Instance
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.EC2_IP }} << EOF
          # Add user to docker group if not already done
          sudo usermod -aG docker ubuntu
          
          # Stop and remove existing containers
          # sudo docker stop infisical-backend infisical-db infisical-dev-redis || true
          # sudo docker rm infisical-backend infisical-db infisical-dev-redis || true
          
          # Pull the latest images
          sudo docker pull ${{ env.DOCKER_USERNAME }}/infisical:latest
          sudo docker pull ${{ env.DOCKER_USERNAME }}/postgres:latest
          sudo docker pull ${{ env.DOCKER_USERNAME }}/redis-image:latest
          
          # Create network if it doesn't exist
          sudo docker network create infisical-network || true
          
          # Run containers
          sudo docker run -d --name infisical-backend --network infisical-network -p 80:8080 ${{ env.DOCKER_USERNAME }}/infisical:latest
          sudo docker run -d --name infisical-db --network infisical-network -p 5432:5432 ${{ env.DOCKER_USERNAME }}/postgres:latest
          sudo docker run -d --name infisical-dev-redis --network infisical-network -p 6379:6379 ${{ env.DOCKER_USERNAME }}/redis-image:latest
          
          # Clean up unused images
          sudo docker image prune --all --force
          EOF
