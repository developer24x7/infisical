name: CI - Build & Push DB Images Infisical

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  BUILD_NUMBER: ${{ github.run_number }}
  DROPLET_IP: 15.156.219.253

jobs:
  build-and-push-db:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull original images
        run: |
          docker compose -f docker-compose.prod.yml pull

      - name: Tag and push Backend image
        run: |
          docker tag infisical/infisical:latest-postgres ${{ secrets.DOCKERHUB_USERNAME }}/infisical:latest
          docker tag infisical/infisical:latest-postgres ${{ secrets.DOCKERHUB_USERNAME }}/infisical:${{ env.BUILD_NUMBER }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/infisical:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/infisical:${{ env.BUILD_NUMBER }}

      - name: Tag and push Postgres image
        run: |
          docker tag postgres:14-alpine ${{ secrets.DOCKERHUB_USERNAME }}/postgres:latest
          docker tag postgres:14-alpine ${{ secrets.DOCKERHUB_USERNAME }}/postgres:${{ env.BUILD_NUMBER }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/postgres:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/postgres:${{ env.BUILD_NUMBER }}

      - name: Tag and push Redis image
        run: |
          docker tag redis:7-alpine ${{ secrets.DOCKERHUB_USERNAME }}/redis-image:latest
          docker tag redis:7-alpine ${{ secrets.DOCKERHUB_USERNAME }}/redis-image:${{ env.BUILD_NUMBER }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/redis-image:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/redis-image:${{ env.BUILD_NUMBER }}

  deploy:
    name: CD - Manual Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Install SSH Key for DigitalOcean Droplet
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DROPLET_SSH_KEY }}

      - name: Deploy to DigitalOcean Droplet
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << EOF
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/infisical:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/postgres:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/redis-image:latest

            docker stop infisical-backend || true
            docker stop infisical-db || true
            docker stop infisical-dev-redis || true

            docker rm infisical-backend || true
            docker rm infisical-db || true
            docker rm infisical-dev-redis || true

            docker run -d --restart unless-stopped --name infisical-backend -p 80:8080 ${{ secrets.DOCKERHUB_USERNAME }}/infisical:latest
            docker run -d --restart unless-stopped --name infisical-db -p 5432:5432 ${{ secrets.DOCKERHUB_USERNAME }}/postgres:latest
            docker run -d --restart unless-stopped --name infisical-dev-redis -p 6379:6379 ${{ secrets.DOCKERHUB_USERNAME }}/redis-image:latest

            docker image prune --all --force
          EOF
