version: "3.8"

services:
  backend:
    container_name: infisical-backend
    image: infisical/infisical:latest-postgres
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - 80:8080
    environment:
      NODE_ENV: production
    env_file: /root/infisical.env
    networks:
      - infisical

  redis:
    container_name: infisical-dev-redis
    image: redis
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: yes
    ports:
      - 6379:6379
    networks:
      - infisical
    volumes:
      - redis_data:/data

  db:
    container_name: infisical-db
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file: /root/infisical.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - infisical
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 10s
      retries: 10

volumes:
  pg_data:
  redis_data:

networks:
  infisical:
